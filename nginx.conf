events {
    # 워커 프로세스가 동시에 처리할 수 있는 최대 연결 수
    worker_connections 1024;
}

# HTTP 설정 블록 시작
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    tcp_nopush on;
    tcp_nodelay on;

    upstream backend {
        server localhost:3000;  # 또는 127.0.0.1:3000
    }

    server {
        listen 80;
        server_name hcsb.synology.me;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name hcsb.synology.me;

        # SSL 인증서 설정
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;

        # add_header Strict-Transport-Security "max-age=31536000" always;

        # set $cors_origin "";
        # if ($http_origin ~ '^https?://(localhost:5173|snsr-work\.netlify\.app)$') {
        #     set $cors_origin $http_origin;
        # }
        location /minio {
            # minio에 대한 특별한 처리
            proxy_pass https://192.168.1.4:5401;

            # https://hcsb.synology.me/minio/어떤/경로/든 → http://192.168.1.4:5401/어떤/경로/든

            # MinIO 전용 타임아웃 설정
            proxy_ssl_verify off;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;

            # 프록시 헤더 설정
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 병렬 처리 최적화
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            proxy_buffer_size 32k;              # 헤더를 위한 버퍼
            proxy_buffers 16 64k;               # 총 1MB (64KB × 16)
            proxy_busy_buffers_size 128k;       # 더 많은 동시 전송 처리

            # 큰 파일 처리를 위한 설정
            client_max_body_size 500m;          # 300MB 영상 업로드 허용
            proxy_request_buffering off;        # 대용량 파일 효율적 처리
        }

        location / {
            # OPTIONS 메서드 처리 (CORS 프리플라이트 요청)
            #  if ($request_method = 'OPTIONS') {
            #     add_header 'Access-Control-Allow-Origin' $cors_origin always;
            #     add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS' always;
            #     add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            #     add_header 'Access-Control-Allow-Credentials' 'true' always;
            #     add_header 'Access-Control-Max-Age' 1728000 always;
            #     return 204;
            # }
            
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Origin $http_origin;  # Origin 헤더 전달
            proxy_read_timeout 86400;  # 웹소켓 연결 유지를 위한 타임아웃 설정
            # add_header 'Access-Control-Allow-Origin' $cors_origin always;
            # add_header 'Access-Control-Allow-Credentials' 'true' always;
            # add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            proxy_pass http://backend;
            # proxy_cookie_flags ~ secure samesite=none;
            # 브라우저의 동일 출처 정책을 우회하기 위한 설정

            # 프록시 기본 설정
            # proxy_http_version 1.1;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}